var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
""(__makeTemplateObject(["typescript\n// src/marketplace/generateProductPage.tsx\n// Course Marketplace - Product Page Generator\n// Generates a React component for a course product page based on a syllabus.\n\nimport React from 'react';\nimport { Syllabus } from './generateSyllabus'; // Import Syllabus type\n// import { ReactMarkdown } from 'react-markdown/lib/react-markdown'; // For rendering markdown description\n// import { StripeCheckoutButton } from './StripeCheckoutButton'; // Hypothetical Stripe component\n\ninterface ProductPageProps {\n    syllabus: Syllabus; // The syllabus to display\n    // Add other props like price, coverImage, authorInfo, checkoutUrl\n    price: number;\n    coverImageUrl?: string;\n    authorName?: string;\n    checkoutUrl: string; // URL for checkout\n}\n\n/**\n * React component that renders a course product page based on a Syllabus.\n * This is a simulated component for MVP.\n */\nconst CourseProductPage: React.FC<ProductPageProps> = ({\n    syllabus,\n    price,\n    coverImageUrl,\n    authorName,\n    checkoutUrl,\n}) => {\n    if (!syllabus) {\n        return <div className=\"text-red-400\">Error: Syllabus data is missing.</div>;\n    }\n\n    return (\n        <div className=\"container mx-auto p-8 bg-neutral-800 text-neutral-100 rounded-lg shadow-xl\">\n            <div className=\"max-w-3xl mx-auto\">\n                {coverImageUrl && (\n                    <img\n                        src={coverImageUrl}\n                        alt={"], ["typescript\n// src/marketplace/generateProductPage.tsx\n// Course Marketplace - Product Page Generator\n// Generates a React component for a course product page based on a syllabus.\n\nimport React from 'react';\nimport { Syllabus } from './generateSyllabus'; // Import Syllabus type\n// import { ReactMarkdown } from 'react-markdown/lib/react-markdown'; // For rendering markdown description\n// import { StripeCheckoutButton } from './StripeCheckoutButton'; // Hypothetical Stripe component\n\ninterface ProductPageProps {\n    syllabus: Syllabus; // The syllabus to display\n    // Add other props like price, coverImage, authorInfo, checkoutUrl\n    price: number;\n    coverImageUrl?: string;\n    authorName?: string;\n    checkoutUrl: string; // URL for checkout\n}\n\n/**\n * React component that renders a course product page based on a Syllabus.\n * This is a simulated component for MVP.\n */\nconst CourseProductPage: React.FC<ProductPageProps> = ({\n    syllabus,\n    price,\n    coverImageUrl,\n    authorName,\n    checkoutUrl,\n}) => {\n    if (!syllabus) {\n        return <div className=\"text-red-400\">Error: Syllabus data is missing.</div>;\n    }\n\n    return (\n        <div className=\"container mx-auto p-8 bg-neutral-800 text-neutral-100 rounded-lg shadow-xl\">\n            <div className=\"max-w-3xl mx-auto\">\n                {coverImageUrl && (\n                    <img\n                        src={coverImageUrl}\n                        alt={"]));
$;
{
    syllabus.title;
}
Cover(__makeTemplateObject(["}\n                        className=\"w-full h-64 object-cover rounded-md mb-6\"\n                    />\n                )}\n\n                <h1 className=\"text-4xl font-bold text-blue-400 mb-4\">{syllabus.title}</h1>\n                {authorName && <p className=\"text-neutral-300 text-lg mb-4\">By {authorName}</p>}\n\n                <div className=\"prose prose-invert max-w-none mb-6\">\n                    {/* Use ReactMarkdown if description supports markdown */}\n                    {/* <ReactMarkdown>{syllabus.description}</ReactMarkdown> */}\n                    <p>{syllabus.description}</p> {/* Simple text for MVP */}\n                </div>\n\n                <div className=\"mb-6\">\n                    <h2 className=\"text-2xl font-semibold text-blue-300 mb-3\">What You'll Learn</h2>\n                    <ul className=\"list-disc list-inside text-neutral-300 space-y-1\">\n                        {syllabus.learningObjectives.map((objective, index) => (\n                            <li key={index}>{objective}</li>\n                        ))}\n                    </ul>\n                </div>\n\n                <div className=\"mb-6\">\n                    <h2 className=\"text-2xl font-semibold text-blue-300 mb-3\">Course Modules</h2>\n                    <div className=\"space-y-4\">\n                        {syllabus.modules.map((module, moduleIndex) => (\n                            <div key={moduleIndex} className=\"p-4 bg-neutral-700/50 rounded-md\">\n                                <h3 className=\"text-xl font-semibold text-neutral-200 mb-2\">Module {moduleIndex + 1}: {module.title}</h3>\n                                {module.description && <p className=\"text-neutral-300 text-sm mb-3\">{module.description}</p>}\n                                <div className=\"space-y-2\">\n                                    {module.lessons.map((lesson, lessonIndex) => (\n                                        <div key={lessonIndex} className=\"p-3 bg-neutral-600/50 rounded-md text-neutral-300 text-sm\">\n                                            <h4 className=\"font-semibold text-neutral-200\">Lesson {lessonIndex + 1}: {lesson.title}</h4>\n                                            {lesson.description && <p className=\"text-neutral-400 text-xs mt-1\">{lesson.description}</p>}\n                                            {/* TODO: Add links to source knowledge records if needed */}\n                                            {/* TODO: Display practice questions, further reading */}\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n\n                <div className=\"text-center mt-8\">\n                    <div className=\"text-3xl font-bold text-green-400 mb-4\">Price: ", "</div>\n                    {/* Use a real Stripe Checkout Button in a production app */}\n                    {/* <StripeCheckoutButton price={price} checkoutUrl={checkoutUrl} /> */}\n                    <a\n                        href={checkoutUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"inline-block px-8 py-3 bg-green-600 text-white font-semibold rounded-md hover:bg-green-700 transition\"\n                    >\n                        Buy Now (Simulated Checkout)\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CourseProductPage;\n"], ["}\n                        className=\"w-full h-64 object-cover rounded-md mb-6\"\n                    />\n                )}\n\n                <h1 className=\"text-4xl font-bold text-blue-400 mb-4\">{syllabus.title}</h1>\n                {authorName && <p className=\"text-neutral-300 text-lg mb-4\">By {authorName}</p>}\n\n                <div className=\"prose prose-invert max-w-none mb-6\">\n                    {/* Use ReactMarkdown if description supports markdown */}\n                    {/* <ReactMarkdown>{syllabus.description}</ReactMarkdown> */}\n                    <p>{syllabus.description}</p> {/* Simple text for MVP */}\n                </div>\n\n                <div className=\"mb-6\">\n                    <h2 className=\"text-2xl font-semibold text-blue-300 mb-3\">What You'll Learn</h2>\n                    <ul className=\"list-disc list-inside text-neutral-300 space-y-1\">\n                        {syllabus.learningObjectives.map((objective, index) => (\n                            <li key={index}>{objective}</li>\n                        ))}\n                    </ul>\n                </div>\n\n                <div className=\"mb-6\">\n                    <h2 className=\"text-2xl font-semibold text-blue-300 mb-3\">Course Modules</h2>\n                    <div className=\"space-y-4\">\n                        {syllabus.modules.map((module, moduleIndex) => (\n                            <div key={moduleIndex} className=\"p-4 bg-neutral-700/50 rounded-md\">\n                                <h3 className=\"text-xl font-semibold text-neutral-200 mb-2\">Module {moduleIndex + 1}: {module.title}</h3>\n                                {module.description && <p className=\"text-neutral-300 text-sm mb-3\">{module.description}</p>}\n                                <div className=\"space-y-2\">\n                                    {module.lessons.map((lesson, lessonIndex) => (\n                                        <div key={lessonIndex} className=\"p-3 bg-neutral-600/50 rounded-md text-neutral-300 text-sm\">\n                                            <h4 className=\"font-semibold text-neutral-200\">Lesson {lessonIndex + 1}: {lesson.title}</h4>\n                                            {lesson.description && <p className=\"text-neutral-400 text-xs mt-1\">{lesson.description}</p>}\n                                            {/* TODO: Add links to source knowledge records if needed */}\n                                            {/* TODO: Display practice questions, further reading */}\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        ))}\n                    </div>\n                </div>\n\n                <div className=\"text-center mt-8\">\n                    <div className=\"text-3xl font-bold text-green-400 mb-4\">Price: ", "</div>\n                    {/* Use a real Stripe Checkout Button in a production app */}\n                    {/* <StripeCheckoutButton price={price} checkoutUrl={checkoutUrl} /> */}\n                    <a\n                        href={checkoutUrl}\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                        className=\"inline-block px-8 py-3 bg-green-600 text-white font-semibold rounded-md hover:bg-green-700 transition\"\n                    >\n                        Buy Now (Simulated Checkout)\n                    </a>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default CourseProductPage;\n"]), price.toFixed(2))(__makeTemplateObject([""], [""]));
