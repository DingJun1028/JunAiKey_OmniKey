# Deploy to GitHub Pages & Supabase Edge Functions

name: Deploy

on:
  push:
    branches: [main]

jobs:
  deploy-pages:
    runs-on: ubuntu-latest
    steps:
      - uses: DingJun1028/checkout@v4
      - name: Use Node.js 20.x
        uses: DingJun1028/setup-node@v4
        with:
          node-version: 20.x
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist

  deploy-supabase:
    runs-on: ubuntu-latest
    needs: deploy-pages
    steps:
      - uses: DingJun1028/checkout@v4
      - name: Use Node.js 20.x
        uses: DingJun1028/setup-node@v4
        with:
          node-version: 20.x
      - name: Install Supabase CLI
        run: npm install -g supabase
      - name: Check Supabase CLI Version
        run: supabase --version
      - name: List Supabase Functions
        run: supabase functions list --project-ref ${{ secrets.SUPABASE_PROJECT_REF }} --token ${{ secrets.SUPABASE_ACCESS_TOKEN }}
      - name: Check Supabase Secrets Existence
        run: |
          if [ -z "${{ secrets.SUPABASE_PROJECT_REF }}" ]; then echo "SUPABASE_PROJECT_REF is NOT set"; else echo "SUPABASE_PROJECT_REF is set"; fi
          if [ -z "${{ secrets.SUPABASE_ACCESS_TOKEN }}" ]; then echo "SUPABASE_ACCESS_TOKEN is NOT set"; else echo "SUPABASE_ACCESS_TOKEN is set"; fi
      - name: Deploy to Supabase Edge Functions
        run: supabase functions deploy --project-ref ${{ secrets.SUPABASE_PROJECT_REF }} --token ${{ secrets.SUPABASE_ACCESS_TOKEN }} --debug
